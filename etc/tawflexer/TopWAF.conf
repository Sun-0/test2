name="TopWAF";
type="TopWAF";
expressions=(
	{
		field="ORIGINAL_DATA";
		separator="WELF()";
		tokenmaps=(
			{
				condition = "e.type == 'topwaf'";
				maps=(	
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="i_sport"; value="_FormatUint16(sport)";},
						{name="s_server_ip"; value="server_ip";},
						{name="i_dport"; value="_FormatUint16(dport)";},
						{name="s_protocol"; value="protocol";},					
						{name="s_host"; value="host";},
						{name="s_url"; value="url";},
						{name="s_http_method"; value="http_method";},
						{name="s_http_useragent"; value="http_useragent";},
						{name="s_http_status"; value="http_status";},
						{name="s_http_referer"; value="http_referer";},
						{name="i_upstream"; value="_FormatUint64(upstream)"; },
						{name="i_downstream"; value="_FormatUint64(downstream)"; },
				        {name="s_src";value="client_ip"; },
						{name="s_server"; value="server";},
						{name="s_event_type"; value="event_type"; remove=0},
						{name="EVENT_TYPE"; value="event_type"; },
						{name="i_rule_id"; value="_FormatUint64(rule_id)";},
						{name="s_action"; value="action";},
						{name="s_severity"; value="severity";},
						{name="http_args"; value="http_args"; },
						{name="http_detail"; value="http_detail";},
						{name="action_data"; value="action_data";}
					);				
			},
			{
				condition = "e.type == 'mgmt'";
				tokenmaps = (
					{
						condition = "e.recorder == 'config'";
						maps=(
								{name="s_recorder"; value="recorder";},
								{name="s_user"; value="user";},
								{name="s_src"; value="src";},
								{name="s_result"; value="result";}
							);
					},
					{
						condition = "e.recorder == 'mgmt'";
						maps=(	
								{name="s_recorder"; value="recorder";},
								{name="s_user"; value="user";},
								{name="s_src"; value="src";},
								{name="s_op"; value="op";},
								{name="s_method"; value="method";},
								{name="s_result"; value="result";}				
							);
					}
				);
				maps = (
					{name="s_sub_type"; value="type";}
				);
			},
			{
				condition = "e.type == 'system'";
				maps=(
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_user"; value="user";},
						{name="s_src"; value="src";},
						{name="s_result"; value="result";}	
					);
			
			},
			{
				condition = "e.type == 'pf'";
				maps = (
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_proto"; value="proto";},
						{name="s_src"; value="src";},
						{name="i_dst"; value="_FormatIP(dst)";},
						{name="i_sport"; value="_FormatUint16(sport)";},
						{name="i_dport"; value="_FormatUint16(dport)";},
						{name="s_smac"; value="smac";},
						{name="s_dmac"; value="dmac";},
						{name="s_indev"; value="indev";},
						{name="s_op"; value="op";}
					);					
			},
			{
				condition = "e.type == 'conn'";
				maps=(
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_proto"; value="proto";},
						{name="s_src"; value="src";},
						{name="i_dst"; value="_FormatIP(dst)";},
						{name="i_trans_sip"; value="_FormatIP(trans_sip)";},
						{name="i_trans_dip"; value="_FormatIP(trans_dip)";},
						{name="i_sport"; value="_FormatUint16(sport)";},
						{name="i_dport"; value="_FormatUint16(dport)";},
						{name="i_trans_sport"; value="_FormatUint16(trans_sport)";},
						{name="i_trans_dport"; value="_FormatUint16(trans_dport)";},
						{name="s_op"; value="op";},
						{name="s_app"; value="app";},
						{name="i_rcvd"; value="_FromatUint64(rcvd)";},
						{name="i_sent"; value="_FromatUint64(sent)";},
						{name="i_duration"; value="_FromatUint64(duration)";}
					);
			},
			{
				condition = "e.type == 'ac'";
				maps=(
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
				        {name="s_proto"; value="proto";},
				        {name="s_src"; value="src";},
				        {name="i_dst"; value="_FormatIP(dst)";},
						{name="i_sport"; value="_FormatUint16(sport)";},
				        {name="i_dport"; value="_FormatUint16(dport)";},
						{name="s_op"; value="op";},
						{name="s_indev"; value="indev";},
						{name="s_policyid"; value="policyid";}				
					);
			},
			{
				condition = "e.type == 'vpn'";
				tokenmaps = (
						{
							condition = "e.recorder == 'vrc'";
							maps = (
									{name="s_recorder"; value="recorder";},
									{name="s_user"; value="user";},
									{name="s_src"; value="src";},
									{name="i_dst"; value="_FormatIP(dst)";},
									{name="i_assign_ip"; value="_FormatIP(assign_ip)";},
									{name="s_op"; value="op";},
									{name="s_result"; value="result";}																
								);
						},
						{
							condition = "e.recorder == 'ike'";
							maps = (
									{name="s_recorder"; value="recorder";},
									{name="s_tunnelname"; value="tunnelname";},
									{name="s_tunneltype"; value="tunneltype";},
									{name="s_local"; value="local";},
									{name="s_remote"; value="remote";},
									{name="s_sp"; value="sp";},
									{name="s_sa"; value="sa";}					
								);
						},
						{
							condition = "e.recorder == 'ipsec'";
							maps = (
									{name="s_recorder"; value="recorder";},
									{name="s_src"; value="src";},
									{name="i_dst"; value="_FormatIP(dst)";}
								);
						}
					);
				maps = (
					{name="s_sub_type"; value="type";}
				);
			},
			{
				condition = "e.type == 'ips' or e.type == 'ddos_clean'";
				maps = (
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_src"; value="src";},
						{name="i_dst"; value="_FormatIP(dst)";},
						{name="i_sport"; value="_FormatUint16(sport)";},
						{name="i_dport"; value="_FormatUint16(dport)";},
						{name="s_rule"; value="rule";},
						{name="i_repeat"; value="_FormatUint32(repeat)";},
						{name="s_appendix"; value="appendix";},
						{name="s_application"; value="application";},		
						{name="s_sdev"; value="sdev";},
						{name="s_ddev"; value="ddev";},
						{name="s_op"; value="op";},
						{name="s_app"; value="app";}																
					);
			},
			{
				condition = "e.type == 'anti_virus'";
				tokenmaps = (
						{
							condition = "e.recorder == 'streamav_http'";
							maps = (
									{name="s_recorder"; value="recorder";},
									{name="s_proto"; value="proto";},
									{name="s_src"; value="src";},
									{name="i_dst"; value="_FormatIP(dst)";},
									{name="i_sport"; value="_FormatUint16(sport)";},
									{name="i_dport"; value="_FormatUint16(dport)";},
									{name="s_method"; value="method";},
									{name="s_url"; value="url";},
									{name="i_virus_id"; value="_Formatuint64(virus_id)";},
									{name="s_virus_name"; value="virus_name";},
									{name="s_virus_deal"; value="virus_deal";},
									{name="s_message"; value="virus_deal";}									
								);
						},
						{
							condition = "e.recorder == 'streamav_ftp'";
							maps = (
									{name="s_recorder"; value="recorder";},
									{name="s_src"; value="src";},
									{name="i_dst"; value="_FormatIP(dst)";},
									{name="i_sport"; value="_FormatUint16(sport)";},
									{name="i_dport"; value="_FormatUint16(dport)";},
									{name="s_proto"; value="proto";},
									{name="s_command"; value="command";},
									{name="s_filename"; value="filename";},
									{name="s_filetype"; value="filetype";},
									{name="i_virus_id"; value="_Formatuint64(virus_id)";},
									{name="s_virus_name"; value="virus_name";},
									{name="s_virus_deal"; value="virus_deal";},
									{name="s_message"; value="virus_deal";}							
								);
						},
						{
							condition = "e.recorder == 'streamav_mail'";
							maps = (
									{name="s_recorder"; value="recorder";},
									{name="s_src"; value="src";},
									{name="i_dst"; value="_FormatIP(dst)";},
									{name="i_sport"; value="_FormatUint16(sport)";},
									{name="i_dport"; value="_FormatUint16(dport)";},
									{name="s_proto"; value="proto";},
									{name="s_sender"; value="sender";},
									{name="s_receiver"; value="receiver";},
									{name="s_cc"; value="cc";},
									{name="s_filename"; value="filename";},
									{name="s_filetype"; value="filetype";},
									{name="i_virus_id"; value="_Formatuint64(virus_id)";},
									{name="s_virus_name"; value="virus_name";},
									{name="s_virus_deal"; value="virus_deal";},
							        {name="s_message"; value="virus_deal";}											
								);
						}
					);
					maps = (
						{name="s_sub_type"; value="type";}
					);
			},
			{
				condition = "e.type == 'url_filter'";
				maps = (
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_src"; value="src";},
						{name="i_dst"; value="_FormatIP(dst)";},
						{name="i_sport"; value="_FormatUint16(sport)";},
						{name="i_dport"; value="_FormatUint16(dport)";},
						{name="s_profile"; value="profile";},
						{name="s_subtype"; value="subtype";},
						{name="s_host"; value="host";},
						{name="s_message"; value="action";},
						{name="s_op"; value="action";},
						{name="s_rule"; value="rule";}						
					);
			},
			{
				condition = "e.type == 'data_filter'";
				maps = (
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_src"; value="src";},
						{name="i_dst"; value="_FormatIP(dst)";},
						{name="i_sport"; value="_FormatUint16(sport)";},
						{name="i_dport"; value="_FormatUint16(dport)";},
						{name="s_profile"; value="profile";},
						{name="s_subtype"; value="subtype";},
						{name="s_host"; value="host";},
						{name="s_message"; value="action";},
						{name="s_op"; value="action";},
						{name="s_rule"; value="rule";},
						{name="s_app"; value="app";},	
						{name="s_method"; value="method";}						
					);
			},
			{
				condition = "e.type == 'file_block'";
				maps = (
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_src"; value="src";},
						{name="i_dst"; value="_FormatIP(dst)";},
						{name="i_sport"; value="_FormatUint16(sport)";},
						{name="i_dport"; value="_FormatUint16(dport)";},
						{name="s_profile"; value="profile";},
						{name="s_subtype"; value="subtype";},
						{name="s_host"; value="host";},
						{name="s_message"; value="action";},
						{name="s_op"; value="action";},
						{name="s_rule"; value="rule";},
						{name="s_app"; value="app";},	
						{name="s_policyid"; value="policyid";}											
					);
			},
			{
				condition = "e.type == 'audit'";
				maps = (
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_account"; value="account";},
						{name="s_src"; value="src";},
						{name="i_dst"; value="_FormatIP(dst)";},
						{name="i_trans_src"; value="_FormatIP(trans_src)";},
						{name="i_trans_dst"; value="_FormatIP(trans_dst)";},
						{name="i_sport"; value="_FormatUint16(sport)";},
						{name="i_dport"; value="_FormatUint16(dport)";},
						{name="i_trans_sport"; value="_FormatUint16(trans_sport)";},
						{name="i_trans_dport"; value="_FormatUint16(trans_dport)";},
						{name="s_op"; value="action";},
						{name="s_subtype"; value="subtype";}
						
					);
			},
			{
				condition = "e.type == 'user_auth'";
				maps = (
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_user"; value="user";},
						{name="s_src"; value="ip";},
						{name="s_op"; value="op";},
						{name="s_result"; value="result";}			
					);
			},
			{
				condition = "e.type == 'secure'";
				maps = (
						{name="s_sub_type"; value="type";},
						{name="s_recorder"; value="recorder";},
						{name="s_src"; value="src";},
						{name="i_dst"; value="_FormatIP(dst)";}
					);
			},
			{
				condition = "e.type == 'dpi'";
				tokenmaps = (
						{
							condition = "e.proto == 'TCP' or e.proto == 'UDP'";
							maps = (
									{name="s_proto"; value="proto";},
							        {name="s_op"; value="op";},
							        {name="s_dstname"; value="dstname";},
							        {name="s_arg"; value="arg";},
									{name="s_connid"; value="connid";}											
								);
						},
						{
							condition = "e.proto == 'http'";
							maps = (
									{name="s_proto"; value="proto";},
									{name="s_method"; value="method";},
									{name="s_url"; value="url";},
									{name="s_title"; value="title";},
									{name="s_urltype"; value="urltype";},
									{name="s_filetype"; value="filetype";}
								);
						},
						{
							condition = "e.proto == 'ftp'";
							maps = (
									{name="s_proto"; value="proto";},
									{name="s_filename"; value="filename";},
									{name="s_command"; value="command";},
									{name="s_filetype"; value="filetype";}																	
								);
						},
						{
							condition = "e.proto == 'dns'";
							maps = (
									{name="s_proto"; value="proto";},
									{name="s_domain"; value="domain";}
								);
						},
						{
							condition = "e.proto == 'rsh' or e.proto == 'telnet'";
							maps = (
									{name="s_proto"; value="proto";},
									{name="s_command"; value="command";}
								);
						},
						{
							condition = "e.proto == 'smtp' or e.proto == 'pop3' or e.proto == 'imap'";
							maps = (
									{name="s_proto"; value="proto";},
									{name="s_sender"; value="sender";},
									{name="s_receiver"; value="receiver";},
									{name="s_cc"; value="cc";},
									{name="s_subject"; value="subject";},
									{name="s_filename"; value="filename";},
									{name="s_filetype"; value="filetype";}
								);
						}				
					);
				maps = (
							{name="s_sub_type"; value="type";},
							{name="s_recorder"; value="recorder";},
							{name="s_filter"; value="filter";},
							{name="s_rule"; value="action";},		
							{name="s_policyid"; value="policyid";},	
							{name="s_user"; value="user";},	
							{name="s_src"; value="src";},	
							{name="i_dst"; value="_FormatIP(dst)";},	
							{name="i_sport"; value="_FormatUint16(sport)";},	
							{name="i_dport"; value="_FormatUint16(dport)";}								
						);
			}
						
				
		);
		maps = (
				{name="i_time"; value="_FormatTime(time)"},
				{name="s_dev"; value="dev";},	
				{name="s_pri"; value="pri";},
				{name="s_id"; value="id";},
				{name="s_version"; value="version";},
				{name="i_vsid"; value="_FormatInt32(vsid)";},	
				{name="s_message"; value="msg";},
				{name="i_client_addr";value="_FormatIP(client_addr)"; }
			);
	}
);
