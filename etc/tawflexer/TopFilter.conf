name="TopGATE";
type="TopGATE";
//name="TopFilter";
//type="TopFilter";
expressions=(
	{
		field="ORIGINAL_DATA";
		separator="WELF()";
		tokenmaps=(
			{
				condition = "e.type == 'mgmt'";
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_rule"; value="rule";},
					{name="s_user"; value="user";},
					{name="i_src"; value="_FormatIP(src)";},
					{name="s_recorder"; value="recorder";},
					{name="s_result"; value="result";},
					{name="s_message"; value="msg";}
				);
			},
			{
				condition = "e.type == 'dpi'";
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_rule"; value="rule";},
					{name="s_recorder"; value="recorder";},
					{name="s_arg"; value="arg";}
				);
			},
			{
				condition = "e.type == 'avse'";
				tokenmaps = (
					{
						condition = "e.proto != ''";
						tokenmaps = (
							{
								condition = "e.proto == 'http'";
								maps = (
									{name="s_proto"; value="proto";},
									{name="s_method"; value="method";},
									{name="s_url"; value="url";},
									{name="s_urltype"; value="urltype";},
									{name="s_title"; value="title";}
								);
							},
							{
								condition = "e.proto == 'ftp'";
								maps = (
									{name="s_proto"; value="proto";},
									{name="s_filename"; value="filename";},
									{name="s_command"; value="command";}
								);
							},
							{
								condition = "e.proto == 'smtp' or e.proto == 'pop3' or e.proto == 'imap'";
								maps = (
									{name="s_proto"; value="proto";},
									{name="s_sender"; value="sender";},
									{name="s_receiver"; value="receiver";},
									{name="s_cc"; value="cc";},
									{name="s_subject"; value="subject";},
									{name="s_filename"; value="filename";}
								);
							}
						);
						maps = (
							{name="s_user"; value="user";},
							{name="i_src"; value="_FormatIP(src)";},
							{name="i_dst"; value="_FormatIP(dst)";},
							{name="i_sport"; value="_FormatUint16(sport)";},
							{name="i_dport"; value="_FormatUint16(dport)";},
							{name="s_virus_deal"; value="virus_deal";},
							{name="s_filter"; value="filter";},
							{name="s_rule"; value="action";},
							{name="s_policyid"; value="policyid";},
							{name="s_filetype"; value="filetype";},
							{name="s_virus_name"; value="virus_name";},
							{name="s_md5"; value="md5";},
							{name="s_message"; value="msg";}			
						);
					},
					{
						condition = "e.proto != ''";
						maps = (
							{name="s_subtype"; value="subtype";},
							{name="s_normal_object"; value="normal_object";},
						    {name="s_virus_object"; value="virus_object";},
							{name="s_protoo"; value="proto";},
							{name="s_virus"; value="virus";},
							{name="s_op"; value="op";},
							{name="s_fileinfected"; value="fileinfected";},
							{name="i_src"; value="_FormatIP(src)";},
							{name="i_dst"; value="_FormatIP(dst)";},
							{name="s_sender"; value="sender";},
							{name="s_receiver"; value="receiver";},
							{name="s_subject"; value="subject";},
							{name="i_size"; value="_FormatUint64(size)";},
							{name="s_message"; value="msg";}							
						);
					}
					
				);
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_rule"; value="rule";},
					{name="s_recorder"; value="recorder";}
				);
			},
			{
				condition = "e.type == 'asse'";
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_rule"; value="rule";},
					{name="s_recorder"; value="recorder";},
					{name="s_proto"; value="proto";},
				    {name="s_user"; value="user";},
				    {name="i_src"; value="_FormatIP(src)";},
					{name="i_dst"; value="_FormatIP(dst)";},
					{name="i_sport"; value="_FormatUint16(sport)";},
					{name="i_dport"; value="_FormatUint16(dport)";},
					{name="s_sender"; value="sender";},
					{name="s_receiver"; value="receiver";},
					{name="s_subject"; value="subject";},
					{name="s_cc"; value="cc";},
					{name="s_filename"; value="filename";},
					{name="s_domain"; value="domain";},
					{name="s_spam_policy"; value="spam_policy";},
					{name="s_spam_deal"; value="spam_deal";}
				);
			},
			{
				condition = "e.type == 'ips' or e.type == 'ar'";
				tokenmaps = (
					{
						condition = "e.recorder == 'IPSEVENT' or e.recorder == 'IPSAR'";
						maps = (
							{name="s_recorder"; value="recorder";},
							{name="s_proto"; value="proto";},
							{name="i_src"; value="_FormatIP(src)";},
							{name="i_dst"; value="_FormatIP(dst)";},
							{name="i_sport"; value="_FormatUint16(sport)";},
							{name="i_dport"; value="_FormatUint16(dport)";},
							{name="i_repeat"; value="_FormatUint32(repeat)";},
							{name="s_rule"; value="rule";},
							{name="s_message"; value="msg";},
							{name="s_op"; value="op";}
						);
					},
					{
						condition = "e.recorder == 'IPSFLOW_AR' or e.recorder == 'IPSFLOW_IP'";
						maps = (
							{name="s_recorder"; value="recorder";},
							{name="s_subtype"; value="rule";},
							{name="s_is_group"; value="is_group";},
							{name="i_ip"; value="_FormatIP(ip)";},
							{name="i_rcvd"; value="_FormatUint64(rcvd)"; },
							{name="i_sent"; value="_FormatUint64(sent)"; },
							{name="i_session"; value="_FormatUint32(session)";},
							{name="s_stat_time"; value="stat_time";}
						);
					},
					{
						condition = "e.recorder == 'IPSPACKET'";
						maps = (
							{name="s_recorder"; value="recorder";},
							{name="s_subtype"; value="rule";},
							{name="i_packetlen"; value="_FormatUint32(packetlen)";},
							{name="s_packet"; value="packet";}
						);
					},
					{
						condition = "e.recorder == 'IPSFLOW'";
						maps = (
							{name="s_recorder"; value="recorder";},
							{name="s_subtype"; value="rule";},
							{name="i_inpkt"; value="_FormatUint64(inpkt)";},
							{name="i_outpkt"; value="_FormatUint64(outpkt)";},
							{name="i_rcvd"; value="_FormatUint64(rcvd)"; },
							{name="i_sent"; value="_FormatUint64(sent)"; },
							{name="s_top1"; value="top1";},
							{name="s_top2"; value="top2";},
							{name="s_top3"; value="top3";}
						);
					}
				);
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_application"; value="application";},
					{name="s_interface"; value="interface";}
				);
			},
			{
				condition = "e.type == 'sssv_system'";
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_rule"; value="rule";},
					{name="s_recorder"; value="recorder";},
					{name="i_src"; value="_FormatIP(ip)";},
					{name="s_result"; value="status";},
					{name="s_dst"; value="dst";},
					{name="s_userid"; value="userid";},
					{name="s_session_id"; value="session_id";},
					{name="s_user"; value="user";},
					{name="s_op"; value="op";}	
				);
			}
		);
		maps = (
			{name="i_client_addr"; value="_FormatIP(client_addr)";},
			{name="s_id"; value="id";},
			{name="s_fw"; value="fw";},
			{name="s_version"; value="version";},
			{name="i_time"; value="_FormatTime0(time)";},
			{name="s_dev"; value="dev";},
			{name="s_pri"; value="pri";},
			{name="s_op"; value="op";}
			//{name="i_src"; value="_FormatIP(src)";},
			//{name="i_dst"; value="_FormatIP(dst)";},
			//{name="i_sport"; value="_FormatUint16(sport)";},
			//{name="i_dport"; value="_FormatUint16(dport)";},
			//{name="i_inpkt"; value="_FormatUint64(inpkt)";},
			//{name="i_outpkt"; value="_FormatUint64(outpkt)";},
			//{name="i_rcvd"; value="_FormatUint64(rcvd)";},
			//{name="i_sent"; value="_FormatUint64(sent)";},
			//{name="s_smac"; value="_smac";},
			//{name="s_dmac"; value="_dmac";},
			//{name="s_indev"; value="indev";},
			//{name="s_outdev"; value="outdev";},
			//{name="s_policy"; value="policy";},
			//{name="i_connid"; value="_FormatUint64(connid)";},
			//{name="i_parentid"; value="_FormatUint64(parentid)";},
			//{name="i_natid"; value="_FormatUint64(natid)";},
			//{name="i_duration"; value="_FormatUint64(duration)";},
			//{name="s_user"; value="user";},
			//{name="s_userid"; value="userid";},
			//{name="s_result"; value="result";}
		);
	}
);
