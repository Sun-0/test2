name="TopFW";
type="TopFW";
expressions=(
	{
		field="ORIGINAL_DATA";
		separator="WELF()";
		tokenmaps=(
			{
				condition = "e.type == 'system' or e.type == 'mgmt'";
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_user"; value="user";},
					{name="i_src"; value="_FormatIP(src)";},
					{name="s_op"; value="op";},
					{name="s_result"; value="result";},
					{name="s_recorder"; value="recorder";},
					{name="s_message"; value="msg";}		
				);
			},
			{
				condition = "e.type == 'user_auth'";
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_user"; value="user";},
					{name="i_ip"; value="_FormatIP(ip)";},
					{name="s_op"; value="op";},
					{name="s_result"; value="result";},
					{name="s_recorder"; value="recorder";},
					{name="s_message"; value="msg";}		
				);
			},
			{
				condition = "e.type == 'conn'";
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_recorder"; value="recorder";},
					{name="s_trans_proto"; value="proto";},
					{name="i_src"; value="_FormatIP(src)";},
					{name="i_dst"; value="_FormatIP(dst)";},
					{name="i_sport"; value="_FormatUint16(sport)";},
					{name="i_dport"; value="_FormatUint16(dport)";},
					{name="i_trans_src"; value="FormatIP(trans_src)";},
					{name="i_trans_dst"; value="FormatIP(trans_dst)";},
					{name="i_trans_sport"; value="_FormatUint16(trans_sport)";},
					{name="i_trans_dport"; value="_FormatUint16(trans_dport)";},
					{name="i_inpkt"; value="_FormatUint64(inpkt)";},
					{name="i_outpkt"; value="_FormatUint64(outpkt)";},
					{name="i_send"; value="_FormatUint64(send)";},
					{name="i_rcvd"; value="_FormatUint64(rcvd)";},
					{name="i_duration"; value="_FormatUint64(duration)";},
					{name="s_connid"; value="connid";},
					{name="s_parent"; value="parent";},
					{name="s_op"; value="op";},
					{name="s_message"; value="msg";}
				);
			},
			{
				condition = "e.type == 'ips' or e.type == 'ar'";
				tokenmaps = (
					{
						condition = "e.recorder == 'IPSEVENT' or e.recorder == 'IPSAR' or e.recorder == 'IPSAV' or e.recorder == 'IPSURL'";
						maps = (
							{name="s_recorder"; value="recorder";},
							{name="s_trans_proto"; value="proto";},
							{name="i_src"; value="_FormatIP(src)";},
							{name="i_dst"; value="_FormatIP(dst)";},
							{name="i_sport"; value="_FormatUint16(sport)";},
							{name="i_dport"; value="_FormatUint16(dport)";},
							{name="i_repeat"; value="_FormatUint32(repeat)";},
							{name="s_message"; value="msg";},
							{name="s_rule"; value="op";},
							{name="s_referrer"; value="appendix";}	
						);
					},
					{
						condition = "e.s_recorder == 'IPSFLOW_AR' or e.s_recorder == 'IPSFLOW_IP'";
						tokenmaps = (
							{
								condition = "e.s_recorder == 'IPSFLOW_AR'";
								maps = (
									{name="s_is_group"; value="is_group";}
								);
							},
							{
								condition = "e.s_recorder == 'IPSFLOW_IP'";
								maps = (
									{name="i_src"; value="_FormatIP(ip)";}
								);
							}						
						);						
						maps = (
							{name="s_recorder"; value="recorder";},
							{name="i_sent"; value="_FormatUint64(sent)";},
							{name="i_rcvd"; value="_FormatUint64(rcvd)";},
							{name="i_session_id"; value="_FormatUint64(session)";},
							{name="i_stat_time"; value="_FormatTime(stat_time)";}
						);
					},
					{
						condition = "e.recorder == 'IPSPACKET'";
						maps = (
							{name="s_recorder"; value="recorder";},
							{name="i_dvc_custom_number1"; value="_FormatUint32(packetlen)";},
							{name="i_packet"; value="_FormatUint32(packet)";}
						);
					},
					{
						condition = "e.recorder == 'IPSFLOW'";
						maps = (	
							{name="s_recorder"; value="recorder";},
							{name="i_inpkt"; value="_FormatUint64(inpkt)";},
							{name="i_outpkt"; value="_FormatUint64(outpkt)";},
							{name="i_send"; value="_FormatUint64(send)";},
							{name="i_rcvd"; value="_FormatUint64(rcvd)";},
							{name="s_top1"; value="top1";},
							{name="s_top2"; value="top2";},
							{name="s_top3"; value="top3";}							
						);
					}
				);
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_event_type"; value="rule";},
					{name="s_app_protocol"; value="application";},
					{name="s_dvc_custom_string1"; value="interface";},
					{name="s_sdev"; value="sdev";},
					{name="s_ddev"; value="ddev";}
				);
			},
			{
				condition = "e.type == 'ac'";
				maps = (	
					{name="s_sub_type"; value="type";},
					{name="s_trans_proto"; value="proto";},
					{name="i_src"; value="_FormatIP(src)";},
					{name="i_dst"; value="_FormatIP(dst)";},
					{name="i_sport"; value="_FormatUint16(sport)";},
					{name="i_dport"; value="_FormatUint16(dport)";},
					{name="s_smac"; value="smac";},
					{name="s_dmac"; value="dmac";},
					{name="s_indev"; value="indev";},
					{name="s_outdev"; value="outdev";},
					{name="s_connid"; value="connid";},
					{name="i_parentid"; value="_FormatUint64(parentid)";},
					{name="s_policyid"; value="policyid";},	
					{name="s_dvc_custom_string1"; value="dpiid";},
					{name="i_natid"; value="_FormatUint64(natid)";},
					{name="s_recorder"; value="recorder";},
					{name="s_rule"; value="rule";},
					{name="s_user"; value="user";},
					{name="s_message"; value="msg";}
				);
			},
			{
				condition = "e.type == 'pf'";
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_rule"; value="rule";},
					{name="s_trans_proto"; value="proto";},
					{name="i_src"; value="_FormatIP(src)";},
					{name="i_dst"; value="_FormatIP(dst)";},
					{name="i_sport"; value="_FormatUint16(sport)";},
					{name="i_dport"; value="_FormatUint16(dport)";},
					{name="s_smac"; value="smac";},
					{name="s_dmac"; value="dmac";},
					{name="s_indev"; value="indev";},
					{name="s_policyid"; value="policyid";}
				);
			},
			{
				condition = "e.type == 'vpn'";
				maps = (
					{name="s_sub_type"; value="type";},
					{name="s_recorder"; value="recorder";}
					
				);
			},
			{
                condition = "e.type == 'secure'";
                maps = (
                    {name="s_sub_type"; value="type";},
                    {name="s_recorder"; value="recorder";},
                    {name="i_src"; value="_FormatIP(src)";},
                    {name="i_dst"; value="_FormatIP(dst)";}
                );
            },
			{
				condition = "e.type == 'dpi'";
				tokenmaps = (
					{
						condition = "e.proto == 'TCP' or e.proto == 'UDP'";
						maps = (
							{name="s_trans_proto"; value="proto";},
							{name="s_recorder"; value="recorder";},
							{name="s_user"; value="user";},
							{name="s_op"; value="op";},
							{name="i_src"; value="_FormatIP(src)";},
							{name="i_dst"; value="_FormatIP(dst)";},
							{name="s_dstname"; value="dstname";},
							{name="s_request_url"; value="arg";},
							{name="i_sport"; value="_FormatUint16(sport)";},
							{name="i_dport"; value="_FormatUint16(dport)";},
							{name="i_connid"; value="_FormatUint64(connid)";},
							{name="s_policyid"; value="policyid";}
						);
					},
					{
						condition = "e.proto == 'http'";
						maps = (
							{name="s_app_proto"; value="proto";},
							{name="s_method"; value="method";},
							{name="s_request_url"; value="url";},
							{name="s_request_object"; value="title";},
							{name="s_dvc_event_category2"; value="urltype";},
							{name="s_filetype"; value="filetype";}
						);
					},
					{
						condition = "e.proto == 'ftp'";
						maps = (
							{name="s_app_proto"; value="proto";},
							{name="s_request_object"; value="filename";},
							{name="s_dvc_event_category2"; value="command";},
							{name="s_filetype"; value="filetype";},
							{nme="s_message"; value="msg";}
						);
					},
					{
						condition = "e.proto == 'dns'";
						maps = (
							{name="s_app_proto"; value="proto";},
							{name="s_dstname"; value="domain";}
						);
					},
					{
						condition = "e.proto == 'rsh' or e.proto == 'telnet'";
						maps = (
							{name="s_app_proto"; value="proto";},
							{name="s_dvc_event_category2"; value="command";}
						);
					},
					{
						condition = "e.proto == 'smtp' or e.proto == 'pop3' or e.proto == 'imap'";
						maps = (
							{name="s_app_proto"; value="proto";},
							{name="s_sender"; value="sender";},
							{name="s_receiver"; value="receiver";},
							{name="s_cc"; value="cc";},
							{name="s_subject"; value="subject";},
							{name="s_request_object"; value="filename";},
							{name="s_filetype"; value="filetype";}
						);
					}
				);
				maps = (
					{name="s_dvc_event_category3"; value="filter";},
					{name="s_rule"; value="action";},
					{name="s_policyid"; value="policyid";},
					{name="s_user"; value="user";},
					{name="i_src"; value="_FormatIP(src)";},
					{name="i_dst"; value="_FormatIP(dst)";},
					{name="i_sport"; value="_FormatUint16(sport)";},
					{name="i_dport"; value="_FormatUint16(dport)";}
				);
		},
		{
				condition = "e.type == 'avse'";
				tokenmaps = (
						{
							condition = "e.subtype == NULL";
							tokenmaps = (
								{
									condition = "e.proto == http";
									maps = (
										{name="s_app_proto"; value="proto";},
										{name="s_method"; value="method";},
										{name="s_request_url"; value="url";},
										{name="s_title"; value="title";}
									);
								},
								{
									condition = "e.proto == ftp";
									maps = (
										{name="s_app_proto"; value="proto";},
										{name="s_filename"; value="filename";},
										{name="s_dvc_event_category2"; value="command";}
									);
								},
								{
									condition = "e.proto == 'smtp' or e.proto == 'pop3' or e.proto == 'imap'";
									maps = (
										{name="s_app_proto"; value="proto";},
										{name="s_sender"; value="sender";},
										{name="s_receiver"; value="receiver";},
										{name="s_cc"; value="cc";},
										{name="s_subject"; value="subject";},
										{name="s_filename"; value="filename";}
									);
								}
								
							);
							maps = (
								{name="s_dvc_event_category2"; value="subtype";},
								{name="i_src"; value="_FormatIP(src)";},
								{name="i_dst"; value="_FormatIP(dst)";},
								{name="i_sport"; value="_FormatUint16(sport)";},
								{name="i_dport"; value="_FormatUint16(dport)";},
								{name="s_user"; value="user";},
								{name="s_virus_name"; value="virus_name";},
								{name="s_virus_deal"; value="virus_deal";},
								{nme="s_message"; value="msg";},
								{name="s_dvc_event_category3"; value="filter";},
							    {name="s_rule"; value="action";},
							    {name="s_policyid"; value="policyid";},
								{name="s_filetype"; value="filetype";}
							
							);
						}						
					);
			maps = (
				{name="s_virus_name"; value="virus";},
				{name="s_op"; value="op";},
				{name="s_fileinfected"; value="fileinfected";},
				{name="i_src"; value="_FormatIP(src)";},
				{name="i_dst"; value="_FormatIP(dst)";},
				{name="s_sender"; value="sender";},
				{name="s_receiver"; value="receiver";},			
				{name="i_op"; value="_FromatUint64(size)";},
				{name="i_normal_object"; value="_FromatUint64(normal_object)";},
				{name="i_virus_object"; value="_FromatUint64(virus_object)";},
				{nme="s_message"; value="msg";},
				{name="s_recorder"; value="recorder";}						
			);
		},
		{
			condition = "e.type == 'asse'";
			tokenmaps = (
				{
					condition = "e.proto == 'TCP' or e.proto == 'UDP'";
					maps = (
						{name="s_sub_type"; value="type";},
						{name="s_app_proto"; value="proto";},
						{name="s_user"; value="user";},
						{name="i_src"; value="_FormatIP(src)";},
						{name="i_dst"; value="_FormatIP(dst)";},
						{name="i_sport"; value="_FormatUint16(sport)";},
						{name="i_dport"; value="_FormatUint16(dport)";},
						{name="s_sender"; value="sender";},
						{name="s_receiver"; value="receiver";},
                        {name="s_cc"; value="cc";},
						{name="s_subject"; value="subject";},
						{name="s_filename"; value="filename";},
						{name="s_domain"; value="domain";},
						{name="s_policyid"; value="spam_policy";},
						{name="s_virus_deal"; value="spam_deal";},
						{name="s_recorder"; value="recorder";}	

					);
				}
            )
		},
		{
			condition = "e.type == 'ar'";
			maps = (
				{name="s_sub_type"; value="type";},
				{name="s_app_proto"; value="proto";},
				{name="s_user"; value="user";},
				{name="i_src"; value="_FormatIP(src)";},
				{name="i_dst"; value="_FormatIP(dst)";},
				{name="i_sport"; value="_FormatUint16(sport)";},
				{name="i_dport"; value="_FormatUint16(dport)";},
				{name="s_policyid"; value="policyid";},
				{name="s_ar_count"; value="ar_count";},
				{name="s_dvc_event_category3"; value="filter";},
				{name="s_rule"; value="action";},
				{name="s_policyid"; value="policyid";},
				{name="s_recorder"; value="recorder";}
			);
		},
		{
			condition = "e.type == 'stat'";
			maps = (
				{name="s_sub_type"; value="type";},
				{name="s_recorder"; value="recorder";}
			);
		},
		{
			condition = "e.type == 'sv_system'";
			maps = (	
				{name="s_sub_type"; value="type";},
				{name="s_recorder"; value="recorder";},
				{name="s_user"; value="user";},
				{name="i_session_id"; value="_Formatuint64(session_id)";},
				{name="s_userid"; value="userid";},
				{name="s_status"; value="status";},
				{name="s_leftclient"; value="dst";},
				{name="i_src"; value="_FormatIP(ip)";},
				{name="i_duration"; value="_FormatUint64(duration)";}
			);
		},
		{
			condition = "e.type == 'sv_wf' or e.type == 'sv_pf'";
			maps = (
				{name="s_sub_type"; value="type";},
				{name="s_recorder"; value="recorder";},
				{name="s_op"; value="op";},
				{name="i_src"; value="_FormatIP(src)";},
				{name="i_dst"; value="_FormatIP(dst)";},
				{name="s_user"; value="user";},
				{name="s_request_url"; value="url";},
				{name="i_responds"; value="_Formatuint64(result)";},
				{name="s_referrer"; value="referrer";},
				{name="s_userid"; value="userid";},
				{name="i_dport"; value="_FormatUint16(dport)";},
				{name="i_rcvd"; value="_FormatUint64(rcvd)";},
				{name="i_sent"; value="_FormatUint64(sent)";}
			);
		},
		{
			condition = "e.type == 'sv_cifs'"
			tokenmaps = (
				{
					condition = "e.s_op == flow_count";
					maps = (
						{name="s_custom2"; value="src";},
						{name="s_custom3"; value="dst";}
					);
				}
			);
			maps = (
				{name="s_sub_type"; value="type";},
				{name="s_op"; value="op";},
				{name="s_top2"; value="src";},
				{name="s_top3"; value="dst";},
				{name="s_recorder"; value="recorder";},
				{name="s_user"; value="user";},
				{name="s_smbuname"; value="smbuname";},
				{name="s_base"; value="base";},
				{name="i_rcvd"; value="_FormatUint64(rcvd)";},
				{name="i_sent"; value="_FormatUint64(sent)";},
				{name="s_result"; value="result";},
				{name="s_userid"; value="userid";}
			);
		},
		{
			condition = "e.type == 'sv_netacc'";
			maps = (
				{name="s_sub_type"; value="type";},
                {name="s_recorder"; value="recorder";},
				{name="s_op"; value="op";},
				{name="s_user"; value="user";},
				{name="s_alg_tag"; value="alg_tag";},
				{name="s_result"; value="result";},
				{name="i_src"; value="_FormatIP(src)";},
				{name="i_dst"; value="_FormatIP(dst)";},
				{name="i_sport"; value="_FormatUint16(sport)";},
				{name="i_dport"; value="_FormatUint16(dport)";},
				{name="s_userid"; value="userid";}
			);
		}
     );
		
		maps = (
			{name="i_client_addr"; value="_FormatIP(client_addr)";},
			{name="i_time"; value="_FormatTime0(time)";},
			{name="s_fw"; value="fw";},
			{name="s_id"; value="id";},
			{name="s_pri"; value="pri";},
			{name="s_message"; value="msg";}
		);
	}
);
